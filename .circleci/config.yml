version: 2.1

################################
# Aliases
################################

aliases:
  - &attach_deps_workspace
    at: ~/codesandbox-client

  - &build_deps_paths
    root: ~/codesandbox-client
    paths:
      - packages/codesandbox-api/dist
      - packages/common/lib
      - packages/deps/dist
      - packages/executors/dist
      - packages/node-services/lib
      - packages/notifications/lib
      - packages/sse-hooks/dist
      - standalone-packages/codesandbox-browserfs/dist
      - standalone-packages/codesandbox-browserfs/build
      - standalone-packages/vscode-textmate/out
      - standalone-packages/vscode-textmate/node_modules

  - &restore_deps_cache
    keys:
      - v24-dependency-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - v24-dependency-cache-{{ .Branch }}
      - v24-dependency-cache

  - &save_deps_cache
    key: v24-dependency-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
    paths:
      - node_modules
      - packages/app/node_modules
      - packages/chrome-extension/node_modules
      - packages/codesandbox-api/node_modules
      - packages/common/node_modules
      - packages/dynamic-pages/node_modules
      - packages/homepage/node_modules
      - packages/node-services/node_modules
      - packages/notifications/node_modules
      - packages/react-embed/node_modules
      - packages/react-sandpack/node_modules
      - packages/sandbox-hooks/node_modules
      - packages/sandpack/node_modules
      - packages/sse-hooks/node_modules

  - &restore_standalone_deps_cache
    keys:
      - v24-standalone-dependency-cache-{{ .Branch }}-{{ checksum
        "standalone-packages/codesandbox-browserfs/yarn.lock" }}
      - v24-standalone-dependency-cache-{{ .Branch }}
      - v24-standalone-dependency-cache

  - &save_standalone_deps_cache
    key:
      v24-standalone-dependency-cache-{{ .Branch }}-{{ checksum
      "standalone-packages/codesandbox-browserfs/yarn.lock" }}
    paths:
      - standalone-packages/codesandbox-browserfs/node_modules

  - &restore_prod_homepage_cache
    key: v24-prod-homepage-build-cache-master

  - &restore_prod_cache
    key:
      v24-prod-build-cache-{{ .Environment.CIRCLE_BRANCH }}-{{
      .Environment.CIRCLE_SHA1 }}

  # To persist the images built by sharp
  - &save_prod_homepage_cache
    key:
      v24-prod-homepage-build-cache-{{ .Environment.CIRCLE_BRANCH }}-{{
      .Environment.CIRCLE_SHA1 }}
    paths:
      - ./packages/homepage/public

  - &save_prod_cache
    key:
      v24-prod-build-cache-{{ .Environment.CIRCLE_BRANCH }}-{{
      .Environment.CIRCLE_SHA1 }}
    paths:
      - ./www

  - &store_test_results
    path: /tmp/test-results

  - &store_artifacts
    path: packages/app/integration-tests/tests/__image_snapshots__/__diff_output__
    destination: image_snapshot_diff

################################
# Executors
################################

executors:
  node:
    docker:
      - image: circleci/node:10
    working_directory: ~/codesandbox-client
  node-with-puppeteer:
    docker:
      - image: codesandbox/node-puppeteer
    working_directory: ~/codesandbox-client
  docker_machine:
    machine: true
    working_directory: ~/codesandbox-client

################################
# Commands
################################

commands:
  build_deps:
    description: 'Install Dependencies with `yarn install`'
    steps:
      - restore_cache: *restore_deps_cache
      - restore_cache: *restore_standalone_deps_cache
      - run:
          name: Install Dependencies
          command: yarn install
      - save_cache: *save_deps_cache
      - save_cache: *save_standalone_deps_cache
      - run:
          name: Build
          command: yarn build:deps
      - persist_to_workspace: *build_deps_paths
  build_prod:
    description: 'Build the Application with `yarn build:prod`'
    steps:
      - checkout
      - restore_cache: *restore_deps_cache
      - attach_workspace: *attach_deps_workspace
      - restore_cache: *restore_prod_homepage_cache
      - run:
          name: Build Application
          command: yarn build:prod
      - save_cache: *save_prod_cache
      - run:
          name: Remove non-images from public
          command: |
            find packages/homepage/public -name "*.js" -type f -delete
            find packages/homepage/public -name "*.json" -type f -delete
            find packages/homepage/public -name "*.js.map" -type f -delete
      - save_cache: *save_prod_homepage_cache
  test_integrations:
    description:
      "Test Integrations with `yarn start:test` & 'yarn test:integrations'"
    steps:
      - checkout
      - restore_cache: *restore_deps_cache
      - attach_workspace: *attach_deps_workspace
      - run:
          name: Start Test Server
          command: yarn start:test
          background: true
      - run:
          name: Setup BrowserStack local environment
          command:
            '[ -n "$BROWSER_STACK_KEY" ] &&
            ./packages/app/integration-tests/BrowserStackLocal --key
            $BROWSER_STACK_KEY || true'
          background: true
      - run:
          name: Test Integrations
          command: |
            sleep 15
            yarn test:integrations --ci --testResultsProcessor="jest-junit"
          environment:
            JEST_JUNIT_OUTPUT: '/tmp/test-results/js-test-results.xml'
      - store_test_results: *store_test_results
      - store_artifacts: *store_artifacts
  test_jest:
    description: 'Test with `yarn test`'
    steps:
      - checkout
      - restore_cache: *restore_deps_cache
      - attach_workspace: *attach_deps_workspace
      - run:
          name: Test
          command: yarn test --ci --testResultsProcessor="jest-junit"
          environment:
            JEST_JUNIT_OUTPUT: 'reports/junit/js-tests-results.xml'
  yarn_lint:
    description: 'Lint with `yarn lint`'
    steps:
      - checkout
      - restore_cache: *restore_deps_cache
      - attach_workspace: *attach_deps_workspace
      - run:
          name: Lint
          command: yarn lint
  yarn_typecheck:
    description: 'Lint with `yarn typecheck`'
    steps:
      - checkout
      - restore_cache: *restore_deps_cache
      - attach_workspace: *attach_deps_workspace
      - run:
          name: Typecheck
          command: yarn typecheck
  docker_cache:
    description: 'Cache, Sign In, Create, and Push Docker Image'
    parameters:
      user:
        type: string
        default: '$DOCKER_USER'
      password:
        type: string
        default: '$DOCKER_PWD'
    steps:
      - restore_cache: *restore_prod_cache
      - run:
          name: Docker Sign In
          command:
            '[ -n "<< parameters.user >>" ] && echo << parameters.password >> |
            docker login -u << parameters.user >> --password-stdin || true'
      - run:
          name: Create Image
          command:
            '[ -n "<< parameters.user >>" ] && docker build -t
            codesandbox/client:${CIRCLE_SHA1:0:7} . || true'
      - run:
          name: Push Image
          command:
            '[ -n "<< parameters.user >>" ] && docker push
            codesandbox/client:${CIRCLE_SHA1:0:7} || true'

################################
# Jobs
################################

jobs:
  build-deps:
    executor: node
    steps:
      - checkout
      - build_deps
  build-prod:
    executor: node
    steps:
      - checkout
      - build_prod
  test-integrations:
    executor: node-with-puppeteer
    steps:
      - checkout
      - test_integrations
  test-jest:
    executor: node
    steps:
      - checkout
      - test_jest
  lint:
    executor: node
    steps:
      - checkout
      - yarn_lint
  typecheck:
    executor: node
    steps:
      - checkout
      - yarn_typecheck
  create-docker-image:
    executor: docker_machine
    steps:
      - checkout
      - docker_cache

################################
# Workflows
################################

workflows:
  version: 2
  build-and-test:
    jobs:
      - build-deps
      - test-integrations:
          requires:
            - build-deps
      - typecheck:
          requires:
            - build-deps
      - test-jest:
          requires:
            - build-deps
      - lint:
          requires:
            - build-deps
      - build-prod:
          requires:
            - build-deps
      - create-docker-image:
          requires:
            - build-prod
            - lint
            - typecheck
            # - test-integrations
            - test-jest
